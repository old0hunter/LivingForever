{"version":3,"sources":["..\\..\\..\\..\\assets\\scripts/assets\\scripts\\JoystickShot.js"],"names":["Common","require","cc","Class","extends","Component","properties","dot","default","type","Node","displayName","_joyCom","_playerNode","_angle","_radian","_speed","_speed1","_speed2","_opacity","onLoad","node","parent","getComponent","sprite","touchType","TouchType","DEFAULT","_initTouchEvent","self","on","EventType","TOUCH_START","_touchStartEvent","TOUCH_MOVE","_touchMoveEvent","TOUCH_END","_touchEndEvent","TOUCH_CANCEL","update","dt","setRotation","_getDistance","pos1","pos2","Math","sqrt","pow","x","y","_getRadian","point","PI","_getAngle","pos","getPosition","atan2","_setSpeed","distance","_radius","event","touchPos","convertToNodeSpaceAR","getLocation","p","radius","width","_stickPos","posX","posY","setPosition","cos","sin"],"mappings":"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","file":"JoystickShot.js","sourceRoot":"..\\..\\..\\..\\assets\\scripts","sourcesContent":["var Common = require('JoystickCommon');\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        dot: {\r\n            default: null,\r\n            type: cc.Node,\r\n            displayName: '摇杆节点',\r\n        },\r\n\r\n        _joyCom: {\r\n            default: null,\r\n            displayName: 'joy Node',\r\n\r\n        },\r\n        _playerNode: {\r\n            default: null,\r\n            displayName: '被操作的目标Node',\r\n        },\r\n\r\n        _angle: {\r\n            default: null,\r\n            displayName: '当前触摸的角度',\r\n\r\n        },\r\n       \r\n        _radian: {\r\n            default: null,\r\n            displayName: '弧度',\r\n        },      \r\n\r\n\r\n        _speed: 0,          //实际速度\r\n        _speed1: 1,         //一段速度\r\n        _speed2: 2,         //二段速度\r\n        _opacity: 0,        //透明度\r\n    },\r\n\r\n\r\n    onLoad: function()\r\n    {\r\n        // joy下的Game组件\r\n        this._joyCom = this.node.parent.getComponent('Game');\r\n        // game组件下的player节点\r\n        this._playerNode = this._joyCom.sprite;\r\n    \r\n        if(this._joyCom.touchType == Common.TouchType.DEFAULT){\r\n            //对圆圈的触摸监听\r\n            this._initTouchEvent();\r\n        }\r\n    },\r\n\r\n\r\n    //对圆圈的触摸监听\r\n    _initTouchEvent: function()\r\n    {\r\n        var self = this;\r\n\r\n        self.node.on(cc.Node.EventType.TOUCH_START, this._touchStartEvent, self);\r\n\r\n        self.node.on(cc.Node.EventType.TOUCH_MOVE, this._touchMoveEvent, self);\r\n\r\n        // 触摸在圆圈内离开或在圆圈外离开后，摇杆归位，player速度为0\r\n        self.node.on(cc.Node.EventType.TOUCH_END, this._touchEndEvent, self);\r\n        self.node.on(cc.Node.EventType.TOUCH_CANCEL, this._touchEndEvent, self);\r\n    },\r\n\r\n    //更新移动目标\r\n    update: function(dt)\r\n    {\r\n        // //旋转目标\r\n        if(this._angle != null){\r\n            this._playerNode.setRotation(- (this._angle - 90));\r\n        }\r\n\r\n    },\r\n\r\n     //计算两点间的距离并返回\r\n    _getDistance: function(pos1, pos2)\r\n    {\r\n        return Math.sqrt(Math.pow(pos1.x - pos2.x, 2) +\r\n        Math.pow(pos1.y - pos2.y, 2));\r\n    },\r\n\r\n    /*角度/弧度转换\r\n    角度 = 弧度 * 180 / Math.PI\r\n    弧度 = 角度 * Math.PI / 180*/\r\n    //计算弧度并返回\r\n    _getRadian: function(point)\r\n    {\r\n        this._radian = Math.PI / 180 * this._getAngle(point);\r\n        return this._radian;\r\n    },\r\n\r\n    //计算角度并返回\r\n    _getAngle: function(point)\r\n    {\r\n        var pos = this.node.getPosition();\r\n        this._angle = Math.atan2(point.y - pos.y, point.x - pos.x) * (180/Math.PI);\r\n        return this._angle;\r\n    },\r\n\r\n     //设置实际速度\r\n    _setSpeed: function(point)\r\n    {\r\n        //触摸点和遥控杆中心的距离\r\n        var distance = this._getDistance(point, this.node.getPosition());\r\n\r\n        //如果半径\r\n        if(distance < this._radius)\r\n        {\r\n            this._speed = this._speed1;\r\n        }\r\n        else\r\n        {\r\n            this._speed = this._speed2;\r\n        }\r\n    },\r\n\r\n    _touchStartEvent: function(event) {\r\n        // 获取触摸位置的世界坐标转换成圆圈的相对坐标（以圆圈的锚点为基准）\r\n        var touchPos = this.node.convertToNodeSpaceAR(event.getLocation());\r\n        //触摸点与圆圈中心的距离\r\n        var distance = this._getDistance(touchPos,cc.p(0,0));\r\n        //圆圈半径\r\n        var radius = this.node.width / 2;\r\n        // 记录摇杆位置，给touch move使用\r\n        this._stickPos = touchPos;\r\n        var posX = this.node.getPosition().x + touchPos.x;\r\n        var posY = this.node.getPosition().y + touchPos.y;\r\n        //更新角度\r\n        this._getAngle(cc.p(posX,posY));\r\n         //手指在圆圈内触摸,控杆跟随触摸点\r\n        if(radius > distance)\r\n        {\r\n            this.dot.setPosition(cc.p(posX, posY));\r\n            return true;\r\n        }\r\n        return false;\r\n    },\r\n\r\n    _touchMoveEvent: function(event){\r\n        var touchPos = this.node.convertToNodeSpaceAR(event.getLocation());\r\n        var distance = this._getDistance(touchPos,cc.p(0,0));\r\n        var radius = this.node.width / 2;\r\n        // 由于摇杆的postion是以父节点为锚点，所以定位要加上ring和dot当前的位置(stickX,stickY)\r\n        var posX = this.node.getPosition().x + touchPos.x;\r\n        var posY = this.node.getPosition().y + touchPos.y;\r\n        if(radius > distance)\r\n        {\r\n            this.dot.setPosition(cc.p(posX, posY));\r\n        }\r\n        else\r\n        {\r\n            //控杆永远保持在圈内，并在圈内跟随触摸更新角度\r\n            var x = this.node.getPosition().x + Math.cos(this._getRadian(cc.p(posX,posY))) * radius;\r\n            var y = this.node.getPosition().y + Math.sin(this._getRadian(cc.p(posX,posY))) * radius;\r\n            this.dot.setPosition(cc.p(x, y));\r\n        }\r\n        //更新角度\r\n         this._getAngle(cc.p(posX,posY));\r\n        //设置实际速度\r\n        // this._setSpeed(cc.p(posX,posY));\r\n\r\n    },\r\n\r\n    _touchEndEvent: function(){\r\n        this.dot.setPosition(this.node.getPosition());\r\n        this._speed = 0;\r\n    },\r\n});\r\n"]}