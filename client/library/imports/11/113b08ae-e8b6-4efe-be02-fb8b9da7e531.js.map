{"version":3,"sources":["../../../../../assets/scripts/Net/assets/scripts/Net/NetMgr.js"],"names":["messageMgr","require","WebSocket","netConfig","host","testhost","instance","getNetworkInstance","networkInstance","socket","isInit","initNetwork","self","onopen","evt","catapult","onmessage","data","onerror","onclose","send","cc","log","readyState","OPEN","close","getInstance","module","exports"],"mappings":";;;;;;AAAA,IAAIA,aAAaC,QAAQ,sBAAR,CAAjB;AACA,IAAIC,YAAYA,SAAhB;;AAEA,IAAMC,YAAY;AACdC,UAAM,0BADQ;AAEdC,cAAU;AAFI,CAAlB;;AAKA,IAAIC,WAAW,IAAf;AACA,SAASC,kBAAT,GAA+B;AAC3B,QAAIC,kBAAkB;AAClBC,gBAAQ,IADU;AAElBC,gBAAQ,KAFU;AAGlBC,qBAAa,uBAAW;AACpB,iBAAKP,IAAL,GAAYD,UAAUC,IAAtB;AACA,iBAAKC,QAAL,GAAgBF,UAAUE,QAA1B;AACA,iBAAKI,MAAL,GAAc,IAAIP,SAAJ,CAAc,KAAKE,IAAnB,CAAd;AACA,gBAAIQ,OAAO,IAAX;AACA,iBAAKH,MAAL,CAAYI,MAAZ,GAAqB,UAASC,GAAT,EAAc;AAC/Bd,2BAAWe,QAAX,CAAoB,eAApB,EAAqCD,GAArC;AACAF,qBAAKF,MAAL,GAAc,IAAd;AACH,aAHD;;AAKA,iBAAKD,MAAL,CAAYO,SAAZ,GAAwB,UAASF,GAAT,EAAc;AAClC,oBAAIG,OAAOH,IAAIG,IAAf;AACAjB,2BAAWe,QAAX,CAAoB,kBAApB,EAAwCD,GAAxC;AACH,aAHD;;AAKA,iBAAKL,MAAL,CAAYS,OAAZ,GAAsB,UAASJ,GAAT,EAAc;AAChCd,2BAAWe,QAAX,CAAoB,gBAApB,EAAsCD,GAAtC;AACH,aAFD;;AAIA,iBAAKL,MAAL,CAAYU,OAAZ,GAAsB,UAASL,GAAT,EAAc;AAChCd,2BAAWe,QAAX,CAAoB,gBAApB,EAAsCD,GAAtC;AACA,qBAAKJ,MAAL,GAAc,KAAd;AACH,aAHD;AAIH,SA1BiB;AA2BlBU,cAAM,cAASH,IAAT,EAAe;AACjB,gBAAI,CAAC,KAAKP,MAAV,EAAkB;AACdW,mBAAGC,GAAH,CAAO,0BAAP;AACH,aAFD,MAEO,IAAI,KAAKb,MAAL,CAAYc,UAAZ,IAA0BrB,UAAUsB,IAAxC,EAA8C;AACjDH,mBAAGC,GAAH,CAAO,kBAAkBL,IAAzB;AACA,qBAAKR,MAAL,CAAYW,IAAZ,CAAiBH,IAAjB;AACH,aAHM,MAGA;AACHI,mBAAGC,GAAH,CAAO,iCAAgC,KAAKb,MAAL,CAAYc,UAAnD;AACH;AACJ,SApCiB;AAqClBE,eAAO,iBAAW;AACd,gBAAI,KAAKhB,MAAT,EAAiB;AACbT,2BAAWe,QAAX,CAAoB,gBAApB;AACA,qBAAKN,MAAL,CAAYgB,KAAZ;AACA,qBAAKhB,MAAL,GAAc,IAAd;AACH;AACJ;AA3CiB,KAAtB;AA6CA,WAAOD,eAAP;AACH;;AAED,IAAIkB,cAAc,SAAdA,WAAc,GAAW;AACzB,QAAIpB,aAAa,IAAjB,EAAuB;AACnBA,mBAAWC,oBAAX;AACH;AACD,WAAOD,QAAP;AACH,CALD;;AAOAqB,OAAOC,OAAP,GAAiB;AACbF,iBAAaA;AADA,CAAjB","file":"NetMgr.js","sourceRoot":"../../../../../assets/scripts/Net","sourcesContent":["var messageMgr = require('../Mgr/MessageMgr.js');\nvar WebSocket = WebSocket;\n\nconst netConfig = {\n    host: \"ws://192.168.33.192:8080\",\n    testhost: \"ws://echo.websocket.org\"\n}\n\nvar instance = null;\nfunction getNetworkInstance () {\n    var networkInstance = {\n        socket: null,\n        isInit: false,\n        initNetwork: function() {\n            this.host = netConfig.host;\n            this.testhost = netConfig.testhost;\n            this.socket = new WebSocket(this.host);\n            var self = this;\n            this.socket.onopen = function(evt) {\n                messageMgr.catapult(\"game.net.open\", evt);\n                self.isInit = true;\n            };\n                \n            this.socket.onmessage = function(evt) {\n                var data = evt.data;\n                messageMgr.catapult(\"game.net.message\", evt);\n            };\n                \n            this.socket.onerror = function(evt) {\n                messageMgr.catapult(\"game.net.error\", evt);\n            };\n                \n            this.socket.onclose = function(evt) {\n                messageMgr.catapult(\"game.net.close\", evt);\n                this.isInit = false;\n            };\n        },\n        send: function(data) {\n            if (!this.isInit) {\n                cc.log('Network is not inited...');\n            } else if (this.socket.readyState == WebSocket.OPEN) {\n                cc.log('Network send:' + data);\n                this.socket.send(data);\n            } else {\n                cc.log('Network WebSocket readState:' +this.socket.readyState);\n            }\n        },\n        close: function() {\n            if (this.socket) {\n                messageMgr.catapult(\"game.net.close\");\n                this.socket.close();\n                this.socket = null;\n            }\n        }\n    };\n    return networkInstance;\n};\n\nvar getInstance = function() {\n    if (instance === null) {\n        instance = getNetworkInstance();  \n    }\n    return instance;\n};\n\nmodule.exports = {\n    getInstance: getInstance,\n};"]}